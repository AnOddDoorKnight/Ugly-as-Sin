// Lump-reader base largly copy-pasted from HD-Injector by Accensus
// https://gitlab.com/accensi/hd-addons/injector
extend class UaS {
	array<string> UASINFOLump;

	override void OnRegister() {
		ReadUASINFO();
		DebugOutputRawLump();
	}

	void DebugOutputRawLump() {
		console.printf("ran DebugOutputRawLump()");
		for (int i = 0; i < UASINFOLump.Size(); i++) {
			console.printf(UASINFOLump[i]);
		}
	}

	void ReadUASINFO() {
		console.printf("ran ReadUASINFO()");
		string RawLumpText;
		int LumpNum;
		while ((LumpNum = Wads.FindLump("UASINFO", LumpNum + 1, Wads.GlobalNamespace)) >= 0) {
			Array<string> LumpLines;
			RawLumpText = Wads.ReadLump(LumpNum);
			RawLumpText.Split(LumpLines, ";", TOK_SKIPEMPTY);

			for (int i = 0; i < LumpLines.Size(); ++i) {
				string Line = LumpLines[i];

				// Remove comments
				int CommentIndex = line.IndexOf("//");
				if (CommentIndex == 0) { Line = ""; }
				else if (CommentIndex > 0) { Line = Line.Left(CommentIndex); }

				// Remove newline and return characters
				Line.Replace("\n", "");
				Line.Replace("\f", "");

				// Remove spaces
				Line.Replace(" ", "");

				// Set back to lump
				LumpLines[i] = Line;

				// Remove blank lines
				if (LumpLines[i].Length() <= 0) { LumpLines.Delete(i); }
			}
			UASINFOLump.Append(LumpLines);
		}
	}

	// static play string GetUASINFO(string prefix) {
		// let this = UaS(EventHandler.Find("UaS");
	// }
}
