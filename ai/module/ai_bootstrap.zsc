class UaS_AI_Bootstrap : EventHandler {
	int givenAIHandlers;

	override void WorldThingSpawned(WorldEvent e) {
		if(!e.Thing) { return; }
		if(UaS.CVarCheck("UaS_AdvancedAIEnabled") && !(CVar.GetCVar("UaS_AdvancedAIEnabled").GetBool())) { return; }
		if(ExcludedClass(e.thing)) { return; }
		if(e.Thing is 'HDMobBase' || e.Thing is "HERPBot" || e.Thing is "DERPBot") {
			e.thing.GiveInventory("UaS_AI_Handler", 1);
			UaS_AI_Handler givenHandler = UaS_AI_Handler(e.thing.FindInventory("UaS_AI_Handler"));
			givenHandler.score = givenAIHandlers;
			givenHandler.ProcessAI = false;
			givenHandler.RecheckAI = random[ai_proc](35, 350);
			givenAIHandlers++;
			if(e.Thing.CountInv("UaS_AI_Handler") == 1) {
				UaS.LogDebug(DBG_AI, string.format("Gave AI tracker "..givenHandler.score.." to "..e.Thing.GetClassName()));
			}
		}
	}

	bool ExcludedClass(actor o) {
		return (
			o is "HDBarrel"
		);
	}

	override void WorldTick() {
		for (int i = 0; i < MAXPLAYERS; i++) {
			if (!playeringame[i]) { continue; }
			if (UaS_AI_Stealth) { Stealth_PlayerBootstrap(i); }
		}
	}

	void Stealth_PlayerBootstrap(int pnum) {
		PlayerInfo p = players[pnum];
		if (!p.mo) { return; }
		if (!p.mo.countinv("UaS_StealthHandler")) {
			p.mo.Giveinventory("UaS_StealthHandler", 1);
		}
	}
}
