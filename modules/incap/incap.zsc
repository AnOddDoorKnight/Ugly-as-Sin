const UaS_Incap_Bleedout = 4200;

class UaS_Incap_Handler : Inventory {
	double bleedout;
	bool incap;
	int incap_woundcount;
	int incap_burncount;
	int incap_unstablewoundcount;
	int incap_oldwoundcount;
	int incap_aggravateddamage;

	default {
		+INVENTORY.PERSISTENTPOWER;
		+INVENTORY.UNDROPPABLE;
		-INVENTORY.INVBAR;
		+INVENTORY.UNTOSSABLE;
		+INVENTORY.KEEPDEPLETED;
	}

	override void PostBeginPlay() {
		bleedout = UaS_Incap_Bleedout;
		incap = false;
	}

	override void DoEffect() {
		if(!multiplayer || deathmatch) { return; }
		if(!owner) { return; }

		//Handle dead players
		if(owner.health <= 0) {
			bleedout = UaS_Incap_Bleedout;
			incap = false;
			UaS.DisableVignette(owner.player);
			return;
		}

		HDPlayerPawn o = HDPlayerPawn(owner);
		if(!o) { return; }
		switch(incap) {

			// Normal
			case false:
				bleedout = min(bleedout + 1, UaS_Incap_Bleedout);

				// Activate incap shield
				if(bleedout == UaS_Incap_Bleedout && o.bBUDDHA == false) {
					o.bBUDDHA = true;
					if(UaS_Debug & Incap) { o.A_Log("Incap shield active"); }
				}

				// Enter incap state
				if(o.health == 1 && o.bBUDDHA == true) {
					incap = true;
					incap_woundcount = o.woundcount;
					incap_burncount = o.burncount;
					incap_unstablewoundcount = o.unstablewoundcount;
					incap_oldwoundcount = o.oldwoundcount;
					incap_aggravateddamage = o.aggravateddamage;
					o.stimcount = 0;
					o.zerk = 0;
					o.haszerked = 0;
					UaS.EnableVignette(o.player, 5, 0.5);
					if(UaS_Debug & InCap) { o.A_Log("Incapacitated"); }
				}
				break;

			// Incapacitation
			case true:
				bleedout = max(bleedout - 1, 0);

				// Clamp important attributes
				o.A_SetHealth(1);
				o.player.CrouchFactor = clamp(o.player.CrouchFactor, 0.5, 0.5);
				o.woundcount = clamp(o.woundcount, 0, incap_woundcount);
				o.burncount = clamp(o.burncount, 0, incap_burncount);
				//o.unstablewoundcount = clamp(o.unstablewoundcount, 0, incap_unstablewoundcount);
				//o.oldwoundcount = clamp(o.oldwoundcount, 0, incap_oldwoundcount);
				o.aggravateddamage = clamp(o.aggravateddamage, 0, incap_aggravateddamage);
				o.A_SelectWeapon("HDFist");
				HDWeapon rw = HDWeapon(o.player.ReadyWeapon);
				o.vel.xy *= 0.8;
				if (rw.GetClassName() == "HDFist") { rw.A_WeaponMessage("\crINCAPACITATED", 5); }

				// Kill player if they bleed out
				if(bleedout == 0) {
					incap = false;
					o.bBUDDHA = false;
					UaS.DisableVignette(o.player);
					o.A_Die('bleedout');
					if(UaS_Debug & incap) { o.A_Log("Bled out"); }
				}

				// Exit incap state
				if(o.stimcount >= 1 || o.zerk >= 1) {
					incap = false;
					bleedout = 0;
					o.A_SetHealth(o.health + 1);
					o.bBUDDHA = false;
					UaS.DisableVignette(o.player);
					if(UaS_Debug & incap) { o.A_Log("Revived"); }
				}
				break;
		}
	}
}
