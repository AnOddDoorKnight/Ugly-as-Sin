extend class UaS_TraumaKit {
	void HandleBioFoam() {
		statusMessage = statusmessage.."\cjBiofoam\n";
		statusMessage = statusmessage.."\cuAbsorbant antispetic flesh-analogue.\n\n";
		if (!currentWound) { return; }

		// Handle actions
		if ((owner.player.cmd.buttons & BT_ATTACK)) {

			if (!(owner.player.oldbuttons & BT_ATTACK)) {
				weaponstatus[TK_HOLD] = random[uas_tk](20,35);
				owner.A_StartSound("UaS/traumakit/biofoam", CHAN_WEAPON, CHANF_DEFAULT, 0.1);
				HDPlayerPawn(owner).A_MuzzleClimb(
					(frandom[uas_tk](-.1,.1),frandom[uas_tk](.01,.1)),
					(frandom[uas_tk](-.1,.1),frandom[uas_tk](.01,.1)),
					(frandom[uas_tk](-.1,.1),frandom[uas_tk](.01,.1)),
					(frandom[uas_tk](-.1,.1),frandom[uas_tk](.01,.1))
				);
			}
			else {
				weaponstatus[TK_HOLD]--;
			}

			if (weaponstatus[TK_HOLD] > 0) {
				currentmessage.text = "Injecting biofoam...\n";
				currentmessage.timeout = 10;

				// semi-normalized distribution for success check
				int check = (
					random[uas_tk](0,100) +
					random[uas_tk](0,100)) / 2;

				// remove some dirt
				if (check < currentWound.cavity) {
					owner.A_StartSound("misc/bulletflesh",CHAN_BODY, CHANF_DEFAULT, 0.2);
					currentWound.cavity = max(currentWound.cavity - 1, 0);
					if(random[uas_tk](0,1)) { owner.A_StartSound("*grunt",CHAN_VOICE); }
					HDPlayerPawn(owner).A_MuzzleClimb(
						(frandom[uas_tk](-.1,.1),frandom[uas_tk](-.1,.1)),
						(frandom[uas_tk](-.1,.1),frandom[uas_tk](-.1,.1)),
						(frandom[uas_tk](-.1,.1),frandom[uas_tk](-.1,.1)),
						(frandom[uas_tk](-.1,.1),frandom[uas_tk](-.1,.1)));
				}

				// maybe remove some infection. Biofoam better at this than saline
				if (check < currentWound.infection * 2 && random[uas_tk](0,1) == 0) {
					currentWound.infection = max(currentWound.infection - 1, 1);
				}
			}
		}
	}
}
